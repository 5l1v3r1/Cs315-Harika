main() {
// directed graph -----------
	Graph dir_students

	Vertex student11 = ("id" = 21402338, "name" = "Eren", "grades" = {"CS315" : 100, "CS319" : 90})   // generate student1 as a vertex
	Vertex student12 = ("id" : 21401947, "name" = "Boran", "grades" = {"CS315" : 90, "CS319" : 90})   // generate student2 as a vertex
	Vertex student13 = ("id" = 21402314, "name" = "Umitcan", "grades" = {"CS315" : 90, "CS319" : 100})    // generate student3 as a vertex

	// adds vertices to the graph
	//memory adresses of the vertexes are copied to Graph
	dir_students.add(student11)
	dir_students.add(student12)
	dir_students.add(student13)

	// edges are specified with default(1) weight
	student12 -> student13   // student2 directs to student3
	student13 -> student11   // student3 directs to student1
	student12 -> student11   // student2 directs to student1
// directed queries
	Path d_concated = dir_students.queryConcat(where: "name" = "Umitcan" && "name" = "Boran")
	Path d_altered = dir_students.queryAlter(where: "name" = "Umitcan" || "name" = "Boran")
	Path d_repeated = dir_students.queryRepet(where: "name" = "Eren" ++)

	Path d_allPaths = dir_students.queryPath("name" = "Umitcan", "id" = "21401947", "name" = "Eren")
}
